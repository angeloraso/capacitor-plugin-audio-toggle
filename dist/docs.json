{
  "api": {
    "name": "AudioTogglePlugin",
    "slug": "audiotoggleplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "enable",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "enable"
      },
      {
        "name": "disable",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "disable"
      },
      {
        "name": "selectDevice",
        "signature": "(data: { device: DeviceName; }) => Promise<void>",
        "parameters": [
          {
            "name": "data",
            "docs": "",
            "type": "{ device: DeviceName; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DeviceName"
        ],
        "slug": "selectdevice"
      },
      {
        "name": "getAvailableDevices",
        "signature": "() => Promise<{ earpiece: boolean; speakerphone: boolean; wired: boolean; bluetooth: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ earpiece: boolean; speakerphone: boolean; wired: boolean; bluetooth: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getavailabledevices"
      },
      {
        "name": "getSelectedDevice",
        "signature": "() => Promise<{ selectedDevice: DeviceName; }>",
        "parameters": [],
        "returns": "Promise<{ selectedDevice: DeviceName; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DeviceName"
        ],
        "slug": "getselecteddevice"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'onChanges', listenerFunc: (data: { earpiece: boolean; speakerphone: boolean; wired: boolean; bluetooth: boolean; selectedDevice: DeviceName; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onChanges'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { earpiece: boolean; speakerphone: boolean; wired: boolean; bluetooth: boolean; selectedDevice: DeviceName; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle",
          "DeviceName"
        ],
        "slug": "addlisteneronchanges"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "DeviceName",
      "slug": "devicename",
      "docs": "",
      "types": [
        {
          "text": "'earpiece'",
          "complexTypes": []
        },
        {
          "text": "'speakerphone'",
          "complexTypes": []
        },
        {
          "text": "'wired'",
          "complexTypes": []
        },
        {
          "text": "'bluetooth'",
          "complexTypes": []
        }
      ]
    }
  ],
  "pluginConfigs": []
}