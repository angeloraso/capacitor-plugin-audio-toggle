{
  "api": {
    "name": "AudioTogglePlugin",
    "slug": "audiotoggleplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "enable",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "enable"
      },
      {
        "name": "disable",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "disable"
      },
      {
        "name": "selectDevice",
        "signature": "(data: { device: DeviceName; }) => Promise<void>",
        "parameters": [
          {
            "name": "data",
            "docs": "",
            "type": "{ device: DeviceName; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DeviceName"
        ],
        "slug": "selectdevice"
      },
      {
        "name": "activate",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "activate"
      },
      {
        "name": "deactivate",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "deactivate"
      },
      {
        "name": "getAvailableDevices",
        "signature": "() => Promise<{ available: DeviceName[]; }>",
        "parameters": [],
        "returns": "Promise<{ available: DeviceName[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DeviceName"
        ],
        "slug": "getavailabledevices"
      },
      {
        "name": "getSelectedDevice",
        "signature": "() => Promise<{ selected: DeviceName; }>",
        "parameters": [],
        "returns": "Promise<{ selected: DeviceName; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "DeviceName"
        ],
        "slug": "getselecteddevice"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'onChanges', listenerFunc: () => { available: DeviceName[]; selected: DeviceName; }) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onChanges'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => { available: DeviceName[]; selected: DeviceName; }"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle",
          "DeviceName"
        ],
        "slug": "addlisteneronchanges"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "DeviceName",
      "slug": "devicename",
      "members": [
        {
          "name": "Earpiece",
          "value": "'Earpiece'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "Speakerphone",
          "value": "'Speakerphone'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "WiredHeadset",
          "value": "'WiredHeadset'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "BluetoothHeadset",
          "value": "'BluetoothHeadset'",
          "tags": [],
          "docs": ""
        }
      ]
    }
  ],
  "typeAliases": [],
  "pluginConfigs": []
}