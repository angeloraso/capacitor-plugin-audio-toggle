{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from \"@capacitor/core\";\n\nexport type DeviceName = 'earpiece' | 'speakerphone' | 'wired' | 'bluetooth';\n\nexport interface AudioTogglePlugin {\n  enable(): Promise<void>;\n  disable(): Promise<void>;\n  selectDevice(data: {device: DeviceName}): Promise<void>;\n  getAvailableDevices(): Promise<{earpiece: boolean, speakerphone: boolean, wired: boolean, bluetooth: boolean}>;\n  getSelectedDevice(): Promise<{selectedDevice: DeviceName}>;\n\n  addListener(\n    eventName: 'onChanges',\n    listenerFunc: (data: {earpiece: boolean, speakerphone: boolean, wired: boolean, bluetooth: boolean, selectedDevice: DeviceName}) => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n  removeAllListeners(): Promise<void>;\n}\n"]}